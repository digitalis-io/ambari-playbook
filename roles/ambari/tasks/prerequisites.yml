---
# Database setup (required for Ambari 3.0.0)
- name: Setup PostgreSQL database
  include_tasks: database-postgres.yml
  when: 
    - ambari_database_type == "postgres"
    - ambari_database_install | default(true) | bool
    - ambari_server | default(false) | bool

- name: Setup MySQL database
  include_tasks: database-mysql.yml
  when:
    - ambari_database_type == "mysql"
    - ambari_database_install | default(true) | bool
    - ambari_server | default(false) | bool

# Repository setup for Ambari 2.x
- name: Download and setup Ambari repository file (RedHat/CentOS 7)
  get_url:
    url: "{{ ambari_repo_base_url }}/ambari/centos7/2.x/updates/{{ ambari_version }}/ambari.repo"
    dest: /etc/yum.repos.d/ambari.repo
    mode: '0644'
  when: 
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "7"

- name: Download and setup Ambari repository file (RedHat/CentOS/Rocky 8)
  get_url:
    url: "{{ ambari_repo_base_url }}/ambari/centos8/2.x/updates/{{ ambari_version }}/ambari.repo"
    dest: /etc/yum.repos.d/ambari.repo
    mode: '0644'
  when: 
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "8"

- name: Import Ambari GPG key (RedHat/CentOS)
  rpm_key:
    key: "https://downloads.apache.org/ambari/KEYS"
    state: present
  when: ansible_os_family == "RedHat"

- name: Add Ambari repository (Ubuntu)
  apt_repository:
    repo: "deb {{ ambari_repo_base_url }}/ambari/ubuntu{{ ansible_distribution_version | replace('.', '') }}/2.x/updates/{{ ambari_version }} Ambari main"
    state: present
    update_cache: yes
  when: 
    - ansible_os_family == "Debian"
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version in ["18.04", "20.04", "22.04", "24.04"]
    - ambari_install_method == "repo"

- name: Import Ambari GPG key (Debian/Ubuntu)
  apt_key:
    url: "https://downloads.apache.org/ambari/KEYS"
    state: present
  when: ansible_os_family == "Debian"

- name: Install Java
  package:
    name: "{{ java_package }}"
    state: present

- name: Set JAVA_HOME environment variable
  lineinfile:
    path: /etc/environment
    regexp: '^JAVA_HOME='
    line: "JAVA_HOME={{ java_home }}"
    create: yes

- name: Install required packages
  package:
    name: "{{ item }}"
    state: present
  loop: "{{ required_packages }}"

- name: Disable SELinux (RedHat/CentOS)
  selinux:
    state: disabled
  when: ansible_os_family == "RedHat"
  ignore_errors: yes

- name: Stop and disable firewall (RedHat/CentOS)
  systemd:
    name: firewalld
    state: stopped
    enabled: no
  when: ansible_os_family == "RedHat"
  ignore_errors: yes

- name: Configure system limits
  pam_limits:
    domain: "*"
    limit_type: "{{ item.type }}"
    limit_item: "{{ item.item }}"
    value: "{{ item.value }}"
  loop:
    - { type: 'soft', item: 'nofile', value: '65536' }
    - { type: 'hard', item: 'nofile', value: '65536' }
    - { type: 'soft', item: 'nproc', value: '65536' }
    - { type: 'hard', item: 'nproc', value: '65536' }

- name: Set swappiness
  sysctl:
    name: vm.swappiness
    value: '10'
    state: present
    reload: yes

- name: Disable Transparent Huge Pages
  shell: |
    echo never > /sys/kernel/mm/transparent_hugepage/enabled
    echo never > /sys/kernel/mm/transparent_hugepage/defrag
  changed_when: false